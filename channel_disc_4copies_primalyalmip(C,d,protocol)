function  [pS,T,W] = channel_discrimination_4copies_primalyalmip(C,d,protocol)
dIn  = d(1);
dOut = d(2);
N     = size(C,3);

k=4;
yalmip('clear');

DIM = [dIn dOut dIn dOut dIn dOut dIn dOut];

switch protocol   
%%%%%%%%%%%%%%%%%%%%% PARALLEL TESTERS %%%%%%%%%%%%%%%%%%%%%
    case 1
     pS=0;
     T = sdpvar((dIn*dOut)^k,(dIn*dOut)^k,N,'hermitian','complex');
     W = sum(T,3);
   F=[];
     for i=1:N
         F = F + [T(:,:,i)>=0];
         pS = pS + (1/N)*real(trace(T(:,:,i) * Tensor(C(:,:,i),k) ));
     end

     F =F+ [ W == TR(W,[2 4 6 8],DIM),trace(W) == dOut^k];

     solution = solvesdp(F,-pS,sdpsettings('solver','scs','verbose',1,'cachesolvers',1));
     disp(['Solution Status: ', num2str(solution.problem)])

%%%%%%%%%%%%%%%%%%%%% SEQUENTIAL TESTERS %%%%%%%%%%%%%%%%%%%%%
    case 2
     pS=0;

    T = sdpvar((dIn*dOut)^k,(dIn*dOut)^k,N,'hermitian','complex');
    W = sum(T,3);
     F=[];
     for i=1:N
         F = F + [T(:,:,i)>=0];
         pS = pS + (1/N) *real(trace(T(:,:,i) * Tensor(C(:,:,i),k) ));
     end
     
    F=F+[ W == TR(W,[8],DIM), 
        PartialTrace(W,[8 7],[dIn dOut dIn dOut dIn dOut dIn dOut]) == kron(PartialTrace(W,[8 7 6],[dIn dOut dIn dOut dIn dOut dIn dOut]),eye(dOut)/dIn),
        PartialTrace(W,[8 7 6 5],[dIn dOut dIn dOut dIn dOut dIn dOut]) == kron(PartialTrace(W,[8 7 6 5 4],[dIn dOut dIn dOut dIn dOut dIn dOut]),eye(dOut)/dIn),
     PartialTrace(W,[8 7 6 5 4 3],[dIn dOut dIn dOut dIn dOut dIn dOut]) == kron(PartialTrace(W,[8 7 6 5 4 3 2],[dIn dOut dIn dOut dIn dOut dIn dOut]),eye(dOut)/dIn),
     trace(W) == dOut^4];%% MODIFIED TO d^4
  
     solution = solvesdp(F,-pS,sdpsettings('solver','scs','verbose',1,'cachesolvers',1));


%%%%%%%%%%%%%%%%%%%%% GENERAL TESTERS %%%%%%%%%%%%%%%%%%%%%
    case 3

     T = sdpvar(dIn*dOut,dIn*dOut,N,'hermitian','complex');
     W = sum(T,3);
     pS=0;
     
     F = [];
     for i=1:N
         F = F + [T(:,:,i)>=0];
         pS = pS + (1/N) *real( trace(T(:,:,i) * Tensor(C(:,:,i),k)));
     end


%L_A(W)=W 
    F=F+[TR(W,[1 2 3 4 5 6],DIM) == TR(W,[1 2 3 4 5 6 8],DIM),
    TR(W,[1 2 3 4 7 8],DIM) == TR(W,[1 2 3 4 6 7 8],DIM),
    TR(W,[1 2 5 6 7 8],DIM) == TR(W,[1 2 4 5 6 7 8],DIM),
    TR(W,[3 4 5 6 7 8],DIM) == TR(W,[2 3 4 5 6 7 8],DIM)];


%L_AB(W)=W 
    F=F+[TR(W,[5 6 7 8],DIM) + TR(W,[2 4 5 6 7 8],DIM) == TR(W,[2 5 6 7 8],DIM) + TR(W,[4 5 6 7 8],DIM),
    TR(W,[1 2 3 4],DIM) + TR(W,[1 2 3 4 6 8],DIM) == TR(W,[1 2 3 4 6],DIM) + TR(W,[1 2 3 4 8],DIM), %L_CD(W)=W 
    TR(W,[1 2 5 6],DIM) + TR(W,[1 2 4 5 6 8],DIM) == TR(W,[1 2 4 5 6],DIM) +  TR(W,[1 2 5 6 8],DIM), %L_BD(W)=W 
    TR(W,[1 2 7 8],DIM) + TR(W,[1 2 4 6 7 8],DIM) == TR(W,[1 2 4 7 8],DIM) +  TR(W,[1 2 6 7 8],DIM), %%L_BC(W)=W 
    TR(W,[3 4 5 6],DIM) + TR(W,[2 3 4 5 6 8],DIM) == TR(W,[2 3 4 5 6],DIM) +  TR(W,[3 4 5 6 8],DIM), %L_AD(W)=W 
    TR(W,[3 4 7 8],DIM) + TR(W,[2 3 4 6 7 8],DIM) == TR(W,[2 3 4 7 8],DIM) +  TR(W,[3 4 6 7 8],DIM)]; %L_AC(W)=W 

%L_ABC(W)=W 
    F=F+[TR(W,[7 8],DIM) + TR(W,[2 4 7 8],DIM) + TR(W,[2 6 7 8],DIM) + TR(W,[4 6 7 8],DIM) == TR(W,[2 7 8],DIM) + TR(W,[4 7 8],DIM) + TR(W,[6 7 8],DIM) + TR(W,[2 4 6 7 8],DIM),
    TR(W,[5 6],DIM) + TR(W,[2 4 5 6],DIM) + TR(W,[2 5 6 8],DIM) + TR(W,[4 5 6 8],DIM) == TR(W,[2 5 6],DIM) + TR(W,[4 5 6],DIM) + TR(W,[5 6 8],DIM) + TR(W,[2 4 5 6 8],DIM), %L_{ABD}(W)
    TR(W,[3 4],DIM) + TR(W,[2 3 4 6],DIM) + TR(W,[2 3 4 8],DIM) + TR(W,[3 4 6 8],DIM) == TR(W,[2 3 4],DIM) + TR(W,[3 4 6],DIM) + TR(W,[3 4 8],DIM) + TR(W,[2 3 4 6 8],DIM), %L_{ACD}(W)
    TR(W,[1 2],DIM) + TR(W,[1 2 4 6],DIM) + TR(W,[1 2 6 8],DIM) + TR(W,[1 2 4 8],DIM) == TR(W,[1 2 6],DIM) + TR(W,[1 2 4],DIM) + TR(W,[1 2 8],DIM) + TR(W,[1 2 4 6 8],DIM)]; %L_{BCD}(W)
    
    %L_V(W)
F=F+[W ==  TR(W,[1 2 3 4 6 7 8],DIM)- TR(W,[1 2 3 4 5 6],DIM) + TR(W,[1 2 3 4 5 6 8],DIM) - TR(W,[1 2 3 4 7 8],DIM)  - TR(W,[1 2 5 6 7 8],DIM) + TR(W,[1 2 4 5 6 7 8],DIM) - TR(W,[3 4 5 6 7 8],DIM) + TR(W,[2 3 4 5 6 7 8],DIM)- TR(W,[5 6 7 8],DIM) - TR(W,[2 4 5 6 7 8],DIM) +TR(W,[2 5 6 7 8],DIM) + TR(W,[4 5 6 7 8],DIM) - TR(W,[1 2 3 4],DIM) - TR(W,[1 2 3 4 6 8],DIM) + TR(W,[1 2 3 4 6],DIM) + TR(W,[1 2 3 4 8],DIM) - TR(W,[1 2 5 6],DIM) - TR(W,[1 2 4 5 6 8],DIM) + TR(W,[1 2 4 5 6],DIM) +  TR(W,[1 2 5 6 8],DIM) - TR(W,[1 2 7 8],DIM) - TR(W,[1 2 4 6 7 8],DIM) + TR(W,[1 2 4 7 8],DIM) +  TR(W,[1 2 6 7 8],DIM) - TR(W,[3 4 5 6],DIM) - TR(W,[2 3 4 5 6 8],DIM) + TR(W,[2 3 4 5 6],DIM) +  TR(W,[3 4 5 6 8],DIM) - TR(W,[3 4 7 8],DIM) + TR(W,[2 3 4 6 7 8],DIM) + TR(W,[2 3 4 7 8],DIM) +  TR(W,[3 4 6 7 8],DIM) - TR(W,[7 8],DIM) - TR(W,[2 4 7 8],DIM) - TR(W,[2 6 7 8],DIM) - TR(W,[4 6 7 8],DIM) + TR(W,[2 7 8],DIM) + TR(W,[4 7 8],DIM) + TR(W,[6 7 8],DIM) + TR(W,[2 4 6 7 8],DIM) - TR(W,[5 6],DIM) -  TR(W,[2 4 5 6],DIM) - TR(W,[2 5 6 8],DIM) - TR(W,[4 5 6 8],DIM) + TR(W,[2 5 6],DIM) + TR(W,[4 5 6],DIM) + TR(W,[5 6 8],DIM) + TR(W,[2 4 5 6 8],DIM) - TR(W,[3 4],DIM) - TR(W,[2 3 4 6],DIM) - TR(W,[2 3 4 8],DIM) - TR(W,[3 4 6 8],DIM) + TR(W,[2 3 4],DIM) + TR(W,[3 4 6],DIM) + TR(W,[3 4 8],DIM) + TR(W,[2 3 4 6 8],DIM) - TR(W,[1 2],DIM) - TR(W,[1 2 4 6],DIM) - TR(W,[1 2 6 8],DIM) - TR(W,[1 2 4 8],DIM) + TR(W,[1 2 6],DIM) + TR(W,[1 2 4],DIM) + TR(W,[1 2 8],DIM) + TR(W,[1 2 4 6 8],DIM)]; 
       


    
    F=F+[trace(W) == dOut^4];% Normalization

     solution = solvesdp(F,-pS,sdpsettings('solver','scs','verbose',1,'cachesolvers',1));
%%%%%%%%%%%%%%%%%%%%% ERROR MESSAGE %%%%%%%%%%%%%%%%%%%%%
    otherwise
        'ERROR!!'
        'Set protocol equals 1 for PAR, 2 for SEQ, and 4 for GEN'
        pause
end


% convert from SDPvar to double
T = double(T); 
W= double(W);
pS = double(pS);
